{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByLength","setState","LENGTH","sortByAlphabet","ALPHABET","handleReset","handleReverse","this","newGoods","goods","visibleGoods","console","log","sort","good1","good2","localeCompare","length","reverse","getReorderedGoods","isVisibleResetButton","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA+CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,aAAe,kBACb,EAAKC,SAAS,CACZH,SAAUL,EAASS,UARzB,EAYEC,eAAiB,kBACf,EAAKF,SAAS,CACZH,SAAUL,EAASW,YAdzB,EAkBEC,YAAc,kBACZ,EAAKJ,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KArBlB,EAyBES,cAAgB,kBACd,EAAKL,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBA3BzB,4CA+BE,WACE,MAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EApEH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNa,EAAY,YAAOD,GAqBzB,OAlBAE,QAAQC,IAAId,EAAUD,GAEtBa,EAAaG,MAAK,SAACC,EAAOC,GACxB,OAAQjB,GACN,KAAKL,EAASW,SACZ,OAAOU,EAAME,cAAcD,GAC7B,KAAKtB,EAASS,OACZ,OAAOY,EAAMG,OAASF,EAAME,OAC9B,KAAKxB,EAASM,KACd,QACE,OAAO,MAITF,GACFa,EAAaQ,UAGRR,EA0CYS,CACfzB,EACA,CAAEG,aAAYC,aAGVsB,EAAuBtB,IAAaL,EAASM,MAAQF,EAE3D,OACE,sBAAKwB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYzB,IAAaL,EAASW,WAEpCoB,QAASjB,KAAKJ,eALhB,iCAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYzB,IAAaL,EAASS,SAEpCsB,QAASjB,KAAKP,aALhB,4BAUA,wBACEsB,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,YAAa1B,IAEf2B,QAASjB,KAAKD,cALhB,qBASCc,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASjB,KAAKF,YAHhB,sBAUJ,6BACE,6BACGG,EAASiB,KAAI,SAAAC,GAAI,OAChB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,iBAvFrB,GAAyBC,IAAMC,WC9D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.271a0712.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n type State = {\n   isReversed: boolean,\n   sortType: SortType,\n };\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByLength = () => (\n    this.setState({\n      sortType: SortType.LENGTH,\n    })\n  );\n\n  sortByAlphabet = () => (\n    this.setState({\n      sortType: SortType.ALPHABET,\n    })\n  );\n\n  handleReset = () => (\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    })\n  );\n\n  handleReverse = () => (\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }\n    )));\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const newGoods = getReorderedGoods(\n      goodsFromServer,\n      { isReversed, sortType },\n    );\n\n    const isVisibleResetButton = sortType !== SortType.NONE || isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-info', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-info', {\n              'is-light': !isReversed,\n            })}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n          {isVisibleResetButton && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {newGoods.map(good => (\n              <li\n                key={good}\n                data-cy=\"Good\"\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}